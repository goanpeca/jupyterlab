name: Create Release Test Workflow

on:
  pull_request:
  push:

jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0} 
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Prepare environment variables
      run: |
        git remote add upstream https://github.com/jupyterlab/jupyterlab.git
        git fetch upstream
        python .github/scripts/parse_ref.py
    - name: Install Conda
      uses: conda-incubator/setup-miniconda@v1
      with:
        auto-update-conda: true
        auto-activate-base: false
        activate-environment: jlabrelease_${{ env.JLAB_RELEASE_BRANCH }}
    # See https://github.com/marketplace/actions/install-ssh-key
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        # Create a key with the jupyterlab-bot
        key: ${{ secrets.SSH_KEY }}
        known_hosts: github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    - name: Prepare release
      run: |
        source scripts/release_prep.sh $JLAB_RELEASE_BRANCH
    - name: Bump release
      run: |
        cd $RELEASE_WORK_DIR/jupyterlab
        jlpm bumpversion $BUMP2VERSION_RELEASE_TYPE
    - name: Publish npm packages
      run: |
        cd $RELEASE_WORK_DIR/jupyterlab
        echo "not yet!"
      # See: https://docs.npmjs.com/using-private-packages-in-a-ci-cd-workflow
      # npm run publish:all
    # - name: Create Release
    #   id: create_release
    #   uses: ncipollo/release-action@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag: ${{ github.event.release.tag_name }}
    #     name: Release ${{ github.event.release.tag_name }}
    #     artifacts: ${{ env.CURRENT_LOCALE_DIR }}/dist/*
    #     body: Release ${{ github.event.release.tag_name }}
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     draft: True
      # Upload to test PyPI
      # twine upload --repository testpypi dist/*
    - name: Push tags and commits
      run: |
        echo "Not yet!"
      # git push origin --tags $JLAB_RELEASE_BRANCH
